{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/home/home.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/components/movie/movie.ts","../../src/providers/omdb-service/omdb-service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 111;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 111\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 153;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 153\n// module chunks = 0","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { OmdbServiceProvider } from '../../providers/omdb-service/omdb-service';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  constructor(public navCtrl: NavController, private omdb: OmdbServiceProvider) { }\n\n  ionViewDidLoad() {\n    this.omdb.getFirstMovie().subscribe( data => {\n      console.log(data.Title);\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { OmdbServiceProvider } from '../providers/omdb-service/omdb-service';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { MovieComponent } from '../components/movie/movie';\n\n@NgModule({\n      declarations: [\n            MyApp,\n            HomePage,\n            MovieComponent,\n      ],\n      imports: [\n            BrowserModule,\n            HttpClientModule,\n            IonicModule.forRoot(MyApp)\n      ],\n      bootstrap: [IonicApp],\n      entryComponents: [\n            MyApp,\n            HomePage,\n      ],\n      providers: [\n            StatusBar,\n            SplashScreen,\n            OmdbServiceProvider,\n            HttpClient,\n            { provide: ErrorHandler, useClass: IonicErrorHandler },\n            OmdbServiceProvider\n      ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = HomePage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Component, Input } from '@angular/core';\nimport { Movie, OmdbServiceProvider } from '../../providers/omdb-service/omdb-service';\n\n/**\n * Generated class for the MovieComponent component.\n *\n * See https://angular.io/api/core/Component for more info on Angular\n * Components.\n */\n@Component({\n    selector: 'movie',\n    templateUrl: 'movie.html'\n})\nexport class MovieComponent {\n\n    @Input() movieId: string;\n    @Input() movieName: string;\n\n    private movie: Movie;\n\n    constructor(private omdb: OmdbServiceProvider) {\n    }\n\n    ngOnInit() {\n        console.log(this.movieId);\n        console.log(this.movieName);\n        if (this.movieId) {\n            this.omdb.getMovieById(this.movieId).subscribe(data => {\n                this.movie = data;\n            });\n        } else if (this.movieName) {\n            this.omdb.getMovieByName(this.movieName).subscribe(data => {\n                this.movie = data;\n            });\n        } else {\n            console.log(\"No movies found..\");\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/movie/movie.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from \"rxjs/Observable\";\n\n/*\n  Generated class for the OmdbServiceProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class OmdbServiceProvider {\n\n    private baseUrl = \"http://www.omdbapi.com/?apikey=202fb065\";\n\n    constructor(public http: HttpClient) {\n        console.log('Hello OmdbServiceProvider Provider');\n    }\n\n    getFirstMovie(): Observable<Movie> {\n        return this.http.get<Movie>(this.baseUrl);\n    }\n\n    getMovieById(movieId: string): Observable<Movie> {\n        console.log(\"Getting movie by ID: \" + movieId);\n        return this.http.get<Movie>(this.baseUrl + \"&i=\" + movieId);\n    }\n\n    getMovieByName(movieName: string): Observable<Movie> {\n        console.log(\"Getting movie by name: \" + movieName);\n        return this.http.get<Movie>(this.baseUrl + \"&t=\" + movieName.replace(' ', '+'));\n    }\n}\n\nexport interface Rating {\n    Source: string;\n    Value: string;\n}\n\nexport interface Movie {\n    Title: string;\n    Year: string;\n    Rated: string;\n    Released: string;\n    Runtime: string;\n    Genre: string;\n    Director: string;\n    Writer: string;\n    Actors: string;\n    Plot: string;\n    Language: string;\n    Country: string;\n    Awards: string;\n    Poster: string;\n    Ratings: Rating[];\n    Metascore: string;\n    imdbRating: string;\n    imdbVotes: string;\n    imdbID: string;\n    Type: string;\n    DVD: string;\n    BoxOffice: string;\n    Production: string;\n    Website: string;\n    Response: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/omdb-service/omdb-service.ts"],"sourceRoot":""}